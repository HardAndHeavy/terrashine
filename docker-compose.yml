version: "3.9"
services:

  postgres:
    image: docker.io/library/postgres:15-alpine@sha256:8bc3c893342c766481df5fde58fab6f1a1115b94eb56778126163305243e9709
    network_mode: host
    # ports:
    #   - "5432:5432"
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      POSTGRES_PASSWORD: password

  minio:
    image: quay.io/minio/minio:latest@sha256:cb51ae5fbf05538dfa45d85aeaf53ac28121a2feb4cdc441740e2b0119797ff4
    command: [ "server", "/data", "--console-address", ":9001" ]
    network_mode: host
    # ports:
    #   - "9001:9001"
    #   - "9000:9000"
    deploy:
      restart_policy:
        condition: on-failure

  aws-cli:
    depends_on:
      - minio
    image: docker.io/amazon/aws-cli@sha256:aa755f0e557a5fc4703930b4df55435f5ea679fd85c8b4a121e47114dae48b2a
    entrypoint: aws
    network_mode: host
    command:
      [
        "--endpoint-url",
        "http://localhost:9000",
        "s3api",
        "create-bucket",
        "--bucket",
        "terrashine"
      ]
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_DEFAULT_REGION: us-east-1

  generate-certificates:
    image: docker.io/alpine/openssl@sha256:cf89651f07a33d2faf4499f72e6f8b0ee2542cd40735d51c7e75b8965c17af0e
    entrypoint: /mnt/scripts/generate-test-certificate
    working_dir: /mnt/
    volumes:
      - source: ./resources/
        target: /mnt/resources/
        type: bind
      - source: ./scripts/
        target: /mnt/scripts/
        type: bind

  nginx:
    image: docker.io/library/nginx@sha256:104c7c5c54f2685f0f46f3be607ce60da7085da3eaa5ad22d3d9f01594295e9c
    network_mode: host
    volumes:
      - ./resources/test/nginx:/etc/nginx:ro
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - generate-certificates
  #terrashine:
  #  image: docker.io/library/rust
  #  build:
  #    context: .
  #    dockerfile: Dockerfile
