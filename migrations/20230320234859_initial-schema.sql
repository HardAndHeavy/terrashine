create table if not exists terraform_provider (
    "id" bigint generated by default as identity primary key,
    "hostname" text not null check (char_length("hostname") <= 253),
    "namespace" text not null check (char_length("namespace") <= 255),
    "type" text not null check (char_length("type") <= 255),
    "expires_at" timestamp with time zone not null,
    constraint unique_provider unique (hostname, namespace, type)
);

create table if not exists "terraform_provider_version" (
    "id" bigint generated by default as identity primary key,

    "provider_id" bigint references "terraform_provider" ("id") not null,
    "version" text not null check (char_length("version") <= 255),
    "os" text not null check (char_length("os") <= 255),
    "arch" text not null check (char_length("arch") <= 255),

    "upstream_package_url" text check (char_length("upstream_package_url") <= 4096),
    "sha256sum" text check ("sha256sum" ~ '^[0-9A-Z]{64}$'),

    constraint "version_tuple" unique ("provider_id","version", "os", "arch")
);
